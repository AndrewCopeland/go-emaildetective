/*
api.emaildetective.io API

EmailDetective.io is an API focusing on validating email addresses and providing a score based off how suspicious an email address is.  To get started register a new user (make sure to verify your email) and then you can can start getting email information.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package emaildetective

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the Model404ErrorResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Model404ErrorResponse{}

// Model404ErrorResponse struct for Model404ErrorResponse
type Model404ErrorResponse struct {
	Message string `json:"message"`
}

type _Model404ErrorResponse Model404ErrorResponse

// NewModel404ErrorResponse instantiates a new Model404ErrorResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModel404ErrorResponse(message string) *Model404ErrorResponse {
	this := Model404ErrorResponse{}
	this.Message = message
	return &this
}

// NewModel404ErrorResponseWithDefaults instantiates a new Model404ErrorResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModel404ErrorResponseWithDefaults() *Model404ErrorResponse {
	this := Model404ErrorResponse{}
	return &this
}

// GetMessage returns the Message field value
func (o *Model404ErrorResponse) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *Model404ErrorResponse) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *Model404ErrorResponse) SetMessage(v string) {
	o.Message = v
}

func (o Model404ErrorResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Model404ErrorResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["message"] = o.Message
	return toSerialize, nil
}

func (o *Model404ErrorResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"message",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varModel404ErrorResponse := _Model404ErrorResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varModel404ErrorResponse)

	if err != nil {
		return err
	}

	*o = Model404ErrorResponse(varModel404ErrorResponse)

	return err
}

type NullableModel404ErrorResponse struct {
	value *Model404ErrorResponse
	isSet bool
}

func (v NullableModel404ErrorResponse) Get() *Model404ErrorResponse {
	return v.value
}

func (v *NullableModel404ErrorResponse) Set(val *Model404ErrorResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableModel404ErrorResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableModel404ErrorResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModel404ErrorResponse(val *Model404ErrorResponse) *NullableModel404ErrorResponse {
	return &NullableModel404ErrorResponse{value: val, isSet: true}
}

func (v NullableModel404ErrorResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModel404ErrorResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


